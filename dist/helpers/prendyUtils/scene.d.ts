import { MyTypes } from "../../declarations";
type AnyCameraName = MyTypes["Types"]["AnyCameraName"];
type AnySegmentName = MyTypes["Types"]["AnySegmentName"];
type CameraNameByPlace = MyTypes["Types"]["CameraNameByPlace"];
type PlaceName = MyTypes["Types"]["PlaceName"];
export declare function getSegmentFromStoryRules<T_Place extends PlaceName, T_Cam extends CameraNameByPlace[T_Place]>(place: T_Place, cam: T_Cam): any;
export declare function doWhenNowSegmentChanges(checkingSegmentName: AnySegmentName, callback: () => void): string | null;
export declare function doWhenNowCamChanges(checkingCamName: AnyCameraName, callback: () => void): string | null;
export declare function doWhenNowPlaceChanges(checkingPlaceName: PlaceName, callback: () => void): string | null;
export declare function doWhenPlaceFullyLoaded(checkingPlaceName: PlaceName, callback: () => void): string | null;
export declare function waitForPlaceFullyLoaded(checkingPlaceName: PlaceName): Promise<void>;
export declare function waitForNowPlaceToChange(checkingPlaceName: PlaceName): Promise<void>;
export declare function waitForNowCamToChange(checkingCamName: AnyCameraName): Promise<void>;
export declare const waitForNextTick: () => Promise<unknown>;
export {};
