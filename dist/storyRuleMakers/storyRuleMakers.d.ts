import { PrendyStoreHelpers } from "../stores/typedStoreHelpers";
import { AnyTriggerName, CameraNameByPlace, CharacterName, DollName, PickupName, PlaceInfoByName, PlaceName, StoryPartName, TriggerNameByPlace } from "../declarations";
export declare function makeTyped_getUsefulStoryStuff<StoreHelpers extends PrendyStoreHelpers>(storeHelpers: StoreHelpers): () => {
    storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
    storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
    globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
    chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
    storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
    nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
    nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
    placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
    nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
    placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
    placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
    camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
    camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
};
export declare function makeTyped_setStoryState<StoreHelpers extends PrendyStoreHelpers>(storeHelpers: StoreHelpers): (newState: Partial<ReturnType<StoreHelpers["getState"]>["story"]["main"]>) => void;
export declare function makeAllStoryRuleMakers<StoreHelpers extends PrendyStoreHelpers, A_AnyTriggerName extends AnyTriggerName = AnyTriggerName, A_CameraNameByPlace extends CameraNameByPlace = CameraNameByPlace, A_CharacterName extends CharacterName = CharacterName, A_DollName extends DollName = DollName, A_PickupName extends PickupName = PickupName, A_PlaceInfoByName extends PlaceInfoByName = PlaceInfoByName, A_PlaceName extends PlaceName = PlaceName, A_StoryPartName extends StoryPartName = StoryPartName, A_TriggerNameByPlace extends TriggerNameByPlace = TriggerNameByPlace>(storeHelpers: StoreHelpers, placeInfoByName: A_PlaceInfoByName, characterNames: readonly A_CharacterName[], dollNames: readonly A_DollName[]): {
    makeCamChangeRules: (callBacksObject: Partial<{ [P_PlaceName in A_PlaceName]: Partial<{ [P_TriggerName in A_CameraNameByPlace[P_PlaceName]]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makeCamLeaveRules: (callBacksObject: Partial<{ [P_PlaceName in A_PlaceName]: Partial<{ [P_TriggerName in A_CameraNameByPlace[P_PlaceName]]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makeCamSegmentRules: (callBacksObject: Partial<{ [P_PlaceName_1 in A_PlaceName]: Partial<{ [P_CamName in keyof A_PlaceInfoByName[P_PlaceName_1]["segmentTimesByCamera"]]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => keyof A_PlaceInfoByName[P_PlaceName_1]["segmentTimesByCamera"][P_CamName]; }>; }>) => boolean;
    makeOnInteractAtTrigger: (callBacksObject: Partial<{ [P_PlaceName_2 in A_PlaceName]: Partial<{ [P_TriggerName_1 in A_TriggerNameByPlace[P_PlaceName_2]]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>, characterName?: A_CharacterName) => () => void;
    makeOnInteractToTalk: (callBacksObject: Partial<{ [P_DollName in A_DollName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>, distanceType?: "touch" | "talk", characterName?: A_CharacterName) => () => void;
    makeOnUsePickupAtTrigger: (callBacksObject: Partial<{ [P_PlaceName_3 in A_PlaceName]: Partial<{ [P_TriggerName_2 in A_TriggerNameByPlace[P_PlaceName_3]]: Partial<{ [P_PickupName in A_PickupName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>; }>, characterName?: A_CharacterName) => <T_PickupName extends A_PickupName>(pickupName: T_PickupName) => false | undefined;
    makeOnUsePickupGenerally: (callBacksObject: Partial<{ [P_PickupName_1 in A_PickupName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>) => <T_PickupName_1 extends A_PickupName>(pickupName: T_PickupName_1) => void;
    makeOnUsePickupToTalk: (callBacksObject: Partial<{ [P_DollName_1 in A_DollName]: Partial<{ [P_PickupName_2 in A_PickupName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>, characterName?: A_CharacterName) => <T_PickupName_2 extends A_PickupName>(pickupName: T_PickupName_2) => false | undefined;
    makePlaceLoadRules: (atStartOfEachPlace: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void, callBacksObject: Partial<{ [P_PlaceName_4 in A_PlaceName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makePlaceNotLoadedRules: (callBacksObject: Partial<{ [P_PlaceName_4 in A_PlaceName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makeStoryPartRules: (callBacksObject: Partial<Record<A_StoryPartName, (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void>>) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makeTouchRules: (callBacksObject: Partial<{ [P_DollName_2 in A_DollName]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>, options?: {
        characterName?: A_CharacterName;
        distanceType?: "touch" | "talk" | "see";
        whenLeave?: boolean;
    }) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
    makeTriggerRules: (callBacksObject: Partial<{ [P_CharacterName in A_CharacterName]: Partial<{ [P_PlaceName_5 in A_PlaceName]: Partial<{ [P_TriggerName_3 in A_TriggerNameByPlace[P_PlaceName_5]]: (usefulStuff: {
        storyState: ReturnType<StoreHelpers["getState"]>["story"]["main"];
        storyRefs: ReturnType<StoreHelpers["getRefs"]>["story"]["main"];
        globalState: ReturnType<StoreHelpers["getState"]>["global"]["main"];
        chapterName: ReturnType<StoreHelpers["getState"]>["story"]["main"]["chapterName"];
        storyPart: ReturnType<StoreHelpers["getState"]>["story"]["main"]["storyPart"];
        nowSegmentName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowSegmentName"];
        nowPlaceName: ReturnType<StoreHelpers["getState"]>["global"]["main"]["nowPlaceName"];
        placeState: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]];
        nowCamName: ReturnType<StoreHelpers["getState"]>["places"][keyof ReturnType<StoreHelpers["getState"]>["places"]]["nowCamName"];
        placesRefs: ReturnType<StoreHelpers["getRefs"]>["places"];
        placeRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]];
        camsRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"];
        camRefs: ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"][keyof ReturnType<StoreHelpers["getRefs"]>["places"][keyof ReturnType<StoreHelpers["getRefs"]>["places"]]["camsRefs"]];
    }) => void; }>; }>; }>, options?: {
        whenLeave?: boolean;
    }) => {
        stopAll: (...args: any) => any;
        startAll: (...args: any) => any;
        start: (...args: any) => any;
        stop: (...args: any) => any;
        ruleNames: any[];
    };
};
